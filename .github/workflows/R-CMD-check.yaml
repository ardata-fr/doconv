on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-16.04, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Install XQuartz
        if: matrix.config.os == 'macOS-latest'
        env:
          XQUARTZ_VERSION: 2.7.11
        run: |
           curl -fLo /tmp/XQuartz.dmg "https://dl.bintray.com/xquartz/downloads/XQuartz-${XQUARTZ_VERSION}.dmg"
           sudo hdiutil attach -noverify /tmp/XQuartz.dmg
           sudo installer -pkg "/Volumes/XQuartz-${XQUARTZ_VERSION}/XQuartz.pkg" -target /
           sudo hdiutil detach /Volumes/XQuartz-${XQUARTZ_VERSION}
           rm /tmp/XQuartz.dmg

      - name: install freetype2 and imagemagick deps and libreoffice
        if: matrix.config.os == 'macOS-latest'
        run: |
           brew install freetype2 imagemagick ghostscript
           brew install --cask libreoffice

      - name: install libreoffice
        if: matrix.config.os == 'ubuntu-16.04'
        run: |
           sudo apt install libreoffice
           sysreqs="export DEBIAN_FRONTEND=noninteractive; apt-get -y update && apt-get install -y libpoppler-cpp-dev libssl-dev zlib1g-dev pandoc-citeproc libmagic-dev libxml2-dev libmagick++-dev libcairo2-dev imagemagick libxft-dev libcurl4-openssl-dev librsvg2-dev libharfbuzz-dev libfribidi-dev libtiff-dev libpng-dev"
           sudo -s eval "$sysreqs"
        if: matrix.config.os == 'windows-latest'
        run: |
          choco install libreoffice-fresh -y

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          check-latest: true

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
